{"version":3,"sources":["components/navbar.jsx","services/logService.js","services/httpService.js","components/common/input.js","components/newCollectionModal.jsx","components/common/form.jsx","components/collection.jsx","components/home.jsx","services/authService.js","components/login.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","registerServiceWorker.js","index.js"],"names":["NavBar","className","to","id","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","Input","name","label","value","onChange","htmlFor","type","NewCollectionModal","state","data","website","description","keyword","errors","submittedNewCollection","schema","Joi","string","required","allow","props","this","setState","pathname","Modal","size","aria-labelledby","centered","Header","Title","Body","onSubmit","handleSubmit","renderInput","renderButton","validate","abortEarly","details","item","path","message","e","preventDefault","doSubmit","handleChange","currentTarget","Component","Collections","posts","handleDelete","history","replace","filter","p","newCollection","http","location","handleAdd","render","show","onHide","window","map","key","onClick","handleUpdate","Home","pstyle","color","fontSize","padding","Fragment","style","getJwt","localStorage","getItem","login","socketJwt","a","async","setItem","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","Login","getSocketJwt","queryString","parse","search","auth","from","socketLoginUrl","paddingTop","paddingBottom","href","Logout","ProtectedRoute","component","rest","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","REACT_APP_NAME","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6715d5dc.chunk.js","sourcesContent":["import React from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nconst NavBar = () => {\n  return (\n    <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n      <Link className='navbar-brand' to='#'>\n        HITMAN\n      </Link>\n\n      <div className='collapse navbar-collapse' id='navbarNav'>\n        <NavLink className='nav-link nav-item' to='/logout'>\n          Logout\n        </NavLink>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar\n","// For simplicity, I changed the implementation of this module\n// and removed Raven. We can always add that in the future\n// and this module is the only module we need to modify.\n\nfunction init() {}\n\nfunction log(error) {\n  console.error(error);\n}\n\nexport default {\n  init,\n  log\n};\n","import axios from 'axios';\nimport logger from './logService';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, (error) => {\n\tconst expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\n\n\tif (!expectedError) {\n\t\tlogger.log(error);\n\t\ttoast.error('An unexpected error occurrred.');\n\t}\n\n\treturn Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n\taxios.defaults.headers.common['x-auth-token'] = jwt;\n}\n\nexport default {\n\tget: axios.get,\n\tpost: axios.post,\n\tput: axios.put,\n\tdelete: axios.delete,\n\tsetJwt\n};\n","import React from 'react';\n\nconst Input = ({name,label,value,onChange,error})=>{\n    return(\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input \n            value = {value}\n            onChange = {onChange} \n            id = {name}\n            name = {name}\n            type=\"text\" \n            className=\"form-control\"/>\n        {error && <div className=\"alert alert-danger\">{error}</div>}\n        </div>\n    );\n};\nexport default Input;","import React, { Component } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { Modal } from 'react-bootstrap'\nimport Form from './common/form'\nimport Joi from 'joi-browser'\n\nclass NewCollectionModal extends Form {\n  state = {\n    data: {\n      name: '',\n      website: '',\n      description: '',\n      keyword: ''\n    },\n    errors: {},\n    submittedNewCollection: false\n  }\n\n  schema = {\n    name: Joi.string()\n      .required()\n      .label('Username'),\n    website: Joi.string()\n      .required()\n      .label('Website'),\n    keyword: Joi.string()\n      .required()\n      .label('keyword'),\n    description: Joi.string()\n      .allow(null, '')\n      .label('Description')\n  }\n\n  async doSubmit (props) {\n    console.log(this.state.data)\n    this.setState({ submittedNewCollection: true })\n  }\n  render () {\n    if (this.state.submittedNewCollection) {\n      return (\n        <Redirect\n          to={{ pathname: '/collections', state: { ...this.state.data } }}\n        />\n      )\n    }\n\n    return (\n      <Modal\n        {...this.props}\n        size='lg'\n        aria-labelledby='contained-modal-title-vcenter'\n        centered\n      >\n        <Modal.Header>\n          <Modal.Title id='contained-modal-title-vcenter'>\n            Add new Collection\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form onSubmit={this.handleSubmit}>\n            {this.renderInput('name', 'Name*')}\n            {this.renderInput('website', 'Website*')}\n            {this.renderInput('keyword', 'keyword*')}\n            {this.renderInput('description', 'Description')}\n\n            {this.renderButton('Submit')}\n            <button className='btn btn-default'>\n              <Link to='/collections'>Cancel</Link>\n            </button>\n          </form>\n        </Modal.Body>\n      </Modal>\n    )\n  }\n}\n\nexport default NewCollectionModal\n","import React, { Component } from 'react';\nimport Input from \"./input\";\nimport Joi from 'joi-browser';\n\nclass Form extends Component {\n\n    state={\n        data:{},\n        errors:{}\n    }\n\n    validate = () => {\n\n        const options = { abortEarly: false };\n        const {error} = Joi.validate(this.state.data, this.schema, options);\n        \n\n        if(!error) return null;\n        const errors = {};\n        for(let item of error.details) errors[item.path[0]]=item.message;\n        return errors;\n    };\n\n    handleSubmit = e =>{\n        e.preventDefault();\n\n        const errors = this.validate();\n        this.setState({errors: errors || {} } );\n        if(errors) return;\n        this.doSubmit();\n    }\n\n    handleChange = e => {\n        const data = {...this.state.data};\n        data[e.currentTarget.name] = e.currentTarget.value;\n        this.setState({ data });\n    }\n\n    renderInput(name,label){\n\n        const {data,errors} = this.state;\n        return(<Input \n        name = {name} \n        label={label} \n        value = {data[name]}\n        onChange={this.handleChange} \n        error = {errors[name]}/>)\n    }\n\n    renderButton(label){\n        return (<button className=\"btn btn-default\">{label}</button>);\n    }\n\n}\n \nexport default Form;","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport NavBar from './navbar'\nimport { Link } from 'react-router-dom'\nimport http from '../services/httpService'\nimport NewCollectionModal from './newCollectionModal'\n\nclass Collections extends Component {\n  state = {\n    posts: []\n  }\n\n  async componentDidMount () {\n    //const {data: posts } = await http.get(\"https://jsonplaceholder.typicode.com/posts\");\n    //console.log(posts);\n    //this.setState({posts});\n    this.props.history.replace({ pathname: '/collections', state: null })\n  }\n\n  async handleAdd (newCollection) {\n    console.log(newCollection)\n    console.log(this.state.posts)\n    const posts = [newCollection, ...this.state.posts]\n\n    console.log(posts)\n    this.state.posts = posts\n    const { data: posts1 } = await http.post(\n      'http://localhost:2000/collections',\n      newCollection\n    )\n    //console.log(posts);\n    //this.setState({posts});\n  }\n\n  handleDelete = post => {\n    this.props.history.replace({ pathname: '/collections', state: null })\n    const posts = this.state.posts.filter(p => p.website !== post.website)\n    this.setState({ posts })\n  }\n\n  handleUpdate () {}\n\n  render () {\n    if (this.props.location.state) {\n      this.handleAdd(this.props.location.state)\n    }\n\n    return (\n      <div>\n        <NavBar />\n        <h1>Collections</h1>\n\n        {\n          <button className='btn btn-success btn-lg'>\n            <Link to='/collections/new'>Add Collection</Link>\n          </button>\n        }\n\n        <div className='tabs'>\n          <Switch>\n            <Route\n              path='/collections/new'\n              render={props => (\n                <NewCollectionModal\n                  show={true}\n                  onHide={() => {\n                    window.location = '/collections'\n                  }}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n\n        <table className='table'>\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Update</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.posts.map(post => (\n              <tr key={post.website}>\n                <td>{post.name}</td>\n                <td>\n                  <button\n                    className='btn btn-info btn-sm'\n                    onClick={() => this.handleUpdate(post)}\n                  >\n                    Update\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className='btn btn-danger btn-sm'\n                    onClick={() => this.handleDelete(post)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default Collections\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nclass Home extends Component {\n  render () {\n    const h1style = {\n      color: '#0f0f0f',\n      fontSize: '50px',\n      padding: '30px'\n      // backgroundColor: '#ebe9df'\n    }\n\n    const pstyle = {\n      color: '#0f0f0f',\n      fontSize: '30px',\n      padding: '10px'\n    }\n\n    return (\n      <React.Fragment>\n        <center>\n          <h1 style={h1style}>Welcome To Hitman</h1>\n\n          <br />\n          <br />\n          <p style={pstyle}>\n            An efficient product which can help end users to dry run and manage\n            their API documentation conveniently.\n          </p>\n          <br />\n\n          <p style={pstyle}> To login Click on the below button</p>\n\n          <button className='btn btn-primary btn-lg'>\n            <Link to='/login' style={{ color: '#FFF' }}>\n              Go To Login\n            </Link>\n          </button>\n        </center>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Home\n","import jwtDecode from 'jwt-decode'\nimport http from './httpService'\nimport apiUrl from '../config.json'\n\nconst apiEndpoint = 'http://localhost:2000/login'\nconst tokenKey = 'token'\n\nhttp.setJwt(getJwt())\n\n\nexport async function login (socketJwt) {\n  // const jwt =\n  //   'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'\n  const { data: jwt } = await http.post(apiEndpoint, { socketJwt })\n  localStorage.setItem(tokenKey, jwt)\n}\n\nexport function loginWithJwt (jwt) {\n  localStorage.setItem(tokenKey, jwt)\n}\n\nexport function logout () {\n  localStorage.removeItem(tokenKey)\n}\n\nexport function getCurrentUser () {\n  try {\n    const jwt = localStorage.getItem(tokenKey)\n    return jwtDecode(jwt)\n  } catch (ex) {\n    return null\n  }\n}\n\nexport function getJwt () {\n  return localStorage.getItem(tokenKey)\n}\n\nexport default {\n  login,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt\n}\n","import queryString from 'query-string'\nimport React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport auth from '../services/authService'\n\nclass Login extends Component {\n  async componentDidMount () {\n    const socketJwt = this.getSocketJwt()\n    if (!socketJwt) return\n    await auth.login(socketJwt)\n    const { state } = this.props.location\n    window.location = state ? state.from.pathname : '/collections'\n  }\n\n  getSocketJwt = () => {\n    const { location } = this.props\n    const { 'sokt-auth-token': socketJwt } = queryString.parse(location.search)\n    return socketJwt\n  }\n\n  render () {\n    if (auth.getCurrentUser()) return <Redirect to='/collections' />\n    const redirectionUrl = 'https://hitman-api.herokuapp.com/'\n    const socketLoginUrl = `https://viasocket.com/login?token_required=true&redirect_uri=${redirectionUrl}`\n\n    const h1style = {\n      color: '#0f0f0f',\n      fontSize: '50px',\n      paddingTop: '150px',\n      paddingBottom: '30px'\n    }\n\n    return (\n      <React.Fragment>\n        <center>\n          <h1 style={h1style}> Welcome to the Login Page</h1>\n\n          <button className='btn btn-primary btn-lg'>\n            <a href={socketLoginUrl} style={{ color: '#fcfcfc' }}>\n              Login With ViaSocket\n            </a>\n          </button>\n        </center>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Login\n","import React, { Component } from 'react'\nimport auth from '../services/authService'\n//import {logout} from '../services/authService'\n\nclass Logout extends Component {\n  componentDidMount () {\n    auth.logout() //logout()\n\n    window.location = '/'\n  }\n\n  render () {\n    return null\n  }\n}\n\nexport default Logout\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"../../services/authService\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!auth.getCurrentUser())\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Collections from './components/collection'\nimport Home from './components/home'\nimport Login from './components/login'\nimport Logout from './components/logout'\nimport './App.css'\nimport ProtectedRoute from './components/common/protectedRoute';\nclass App extends Component {\n  render () {\n    return (\n      <div>\n        <div className='content'>\n          <Switch>\n            <ProtectedRoute path='/collections' component={Collections} />\n            <Route path='/login' component={Login} />\n            <Route path='/logout' component={Logout} />\n            <Route path='/' component={Home} />\n          </Switch>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconsole.log('Hitman', process.env.REACT_APP_NAME);\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}